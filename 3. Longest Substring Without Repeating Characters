public class Solution { //使用sliding window方式來解決問題
    public int lengthOfLongestSubstring(String s) {
        Map<Character, Integer> chars = new HashMap();

        int left = 0;
        int right = 0;

        int res = 0;
        while (right < s.length()) {
            char r = s.charAt(right);
            chars.put(r, chars.getOrDefault(r,0) + 1);
            
            while (chars.get(r) > 1) {
                char l = s.charAt(left);
                chars.put(l, chars.get(l) - 1);   //這會讓hashmap覆蓋掉裡面有的key value
                left++;
            }

            res = Math.max(res, right - left + 1);

            right++;
        }
        return res;
    }
}
        
        
        // int count = 0;   //HASHMAP方法會有BUG TESTCASE"aab"過不了
        // int checkpoint = 0;
        // HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        // if(s.contains(" ")||s.length()==1)return 1;
        // else if (s=="")return count;
        // else
        // {
        //     for(int i = 0;i<s.length();i++)
        //     {
        //         if(map.get(s.charAt(i))!=null)
        //         {
        //             count =Math.max(i-map.get(s.charAt(i)),count); 
        //              map.replace(s.charAt(i),i);
        //              checkpoint +=1;
        //         }
        //         else
        //         {
        //             map.put(s.charAt(i),i);
        //         }
        //     }
        // }
        // return (checkpoint==0)?s.length():count;
 
